"""
Usage:

import os
import logging
PROJECT_DIR = os.path.dirname(os.path.dirname(__file__))
LOG_DIR = os.path.join(PROJECT_DIR, 'etc', 'logs')

from vlad_utils.logging import setup_logging_handlers, create_console_handler, create_file_handler
setup_logging_handlers(
    create_console_handler(logging.INFO),
    create_file_handler(logging.DEBUG, LOG_DIR, file_mode='w')
)

logging.debug('Debug')
logging.info('Info')
"""
import logging
import os


DEFAULT_LOG_FORMAT = '%(asctime)s [%(name)s] %(levelname)s: %(message)s'
DATE_FORMAT = '%Y-%m-%d %H:%M:%S'


def create_console_handler(level: int) -> logging.Handler:
    """Returns Console Handler with specified level"""
    handler = logging.StreamHandler()
    handler.setLevel(level)
    return handler


def create_file_handler(level: int,
                        dir_name: str,
                        file_name: str = 'log.log',
                        file_mode: str = 'w') -> logging.Handler:
    """Returns File handler with specified level, file and fileMode"""
    file_path = os.path.join(dir_name, file_name)

    # todo: dirty solution for bug in recent Scrapy version - 'w' mode files cleared after spider closed
    if file_mode == 'w' and os.path.exists(file_path):
        os.remove(file_path)
        file_mode = 'a'

    os.makedirs(dir_name, exist_ok=True)
    handler = logging.FileHandler(filename=file_path, mode=file_mode)
    handler.setLevel(level)
    return handler


def setup_logging_handlers(*handlers: logging.Handler,
                           log_format: str = None):
    """Configures Logging using handlers generated by methods above"""
    logging.basicConfig(handlers=handlers,
                        level=logging.DEBUG,  # default level, overriden by handlers
                        format=log_format or DEFAULT_LOG_FORMAT,
                        datefmt=DATE_FORMAT)


def reload_logging():
    """
    Reload logger to make available basicConfig once again
    """
    from importlib import reload
    logging.shutdown()
    reload(logging)
